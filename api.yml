swagger: "2.0"
info:
  description: |
    This is an api for "RSS Feed Aggregator".

    [View Subject](https://intra.epitech.eu/module/2016/M-EAP-650/PAR-9-1/acti-235029/project/file/RSS-feed-aggregator.pdf) or [Messenger group](https://www.messenger.com/t/552069568251252)

    A successfull login or signup generate a key usable to authenticate request

    This key is owned by one account, a request providing an apiKey should get result for the user owning this key.

  version: "1.0.0"
  title: RSS Feed Aggregator
host: 91.121.9.68:80
basePath: /swagger-jaxrs-server-1.0.0
schemes:
  - http
paths:
  /users/signup:
    post:
      tags:
        - user
      summary: Signup with email and password
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: credentials
          description: credentials
          required: true
          schema:
            required:
              - email
              - password
            properties:
              email:
                type: string
              password:
                type: string
      responses:
        "200":
          description: Successful signup
          schema:
            properties:
              apiKey:
                type: string
                description: used for authenticate future requests
              userId:
                type: number
                description: userId for querying related items (feeds...)
        "400":
          description: Invalid email or password
  /users/login:
    post:
      tags:
        - user
      summary: Login with email and password
      description: ""
      produces:
        - application/json
      parameters:
        - in: body
          name: credentials
          description: credentials
          required: true
          schema:
            required:
              - email
              - password
            properties:
              email:
                type: string
              password:
                type: string
      responses:
        "200":
          description: Successful login
          schema:
            properties:
              apiKey:
                type: string
                description: used for authenticate future requests
              userId:
                type: number
                description: userId for querying related items (feeds...)
        "401":
          description: Invalid credentials

  /users/logout:
    get:
      tags:
        - user
      summary: Logs out current logged in user session
      description: ""
      produces:
        - application/json
        - application/xml
      responses:
        default:
          description: successful operation
      security:
      - api_key: []
  /feeds:
    get:
      tags:
        - feed
      summary: Get all feeds subscribed by currend user
      produces:
        - application/json
      responses:
        "200":
          description: the lisT of feedS subscribed by user
          schema:
            type: array
            items:
              properties:
                id:
                  type: integer
                title:
                  type: string
                  description: title of FEED

        "400":
          description: Invalid tag value
      security:
      - api_key: []
    post:
      tags:
        - feed
      summary: Suscribe to a feed by url (add it in database, and reference its id for current user)
      produces:
        - application/json
      parameters:
        - in: body
          name: feedUrl
          description: url of feed that user want to subscribe
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          schema:
            type: number
            description: id of subscribed feed
        "400":
          description: url doesn't correspond to valid rss file
        "404":
          description: url inaccessible
      security:
      - api_key: []
    delete:
      tags:
        - feed
      summary: Unsuscribe to a feed by url (keep it in database, juste remove reference for user)
      produces:
        - application/json
      parameters:
        - in: query
          name: feedId
          description: ID of feed that user want to unsubscribe
          required: true
          type: integer
      responses:
        "200":
          description: successful unsubscribed
        "404":
          description: feed doesn't exist
      security:
      - api_key: []
  /feeds/{feedId}:
    get:
      tags:
        - feed
      summary: Find a feed and retrieve its articles
      description: Returns id and titles of articles of this feed
      produces:
        - application/json
      parameters:
        - in: path
          name: feedId
          description: ID of feed that needs to be fetched
          required: true
          type: integer
          format: int64
      responses:
        "404":
          description: feed not found
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/Feed"
        "400":
          description: Invalid ID supplied
      security:
        - api_key: []

  /articles/{feedId}:
    get:
      tags:
        - article
      summary: retrieve the lisT of articles in the feed
      produces:
        - application/json
      parameters:
        - in: path
          name: feedId
          description: ID of feed containing article
          required: true
          type: string
      responses:
        "200":
          description: list of articles in the feed
          schema:
            type: array
            items:
              properties:
                id:
                  type: integer
                title:
                  type: string
                  description: title of article
        "400":
          description: Invalid Order
      security:
      - api_key: []

  /articles/{feedId}/{articleId}:
    get:
      tags:
        - article
      summary: retrieve article feed id and article id (id correspond to 1st, 2nd, 3rd, 4th... article)
      produces:
        - application/json
      parameters:
        - in: path
          name: feedId
          description: ID of feed containing article
          required: true
          type: string
        - in: path
          name: articleId
          description: ID of article to retrieve
          required: true
          type: string
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/Article"
        "400":
          description: Invalid Order
      security:
      - api_key: []
securityDefinitions:
  api_key:
    type: apiKey
    name: api_key
    in: header
definitions:
  User:
    type: object
    required:
     - email
     - password
    properties:
      id:
        type: integer
      email:
        type: string
      password:
        type: string
  Feed:
    type: object
    required:
      - id
      - url
      - description
      - link
      - title
    properties:
      id:
        type: integer
      url:
        type: string
        description: url to download feed
      category:
        type: string
      copyright: 
        type: string
      description:
        type: string
      docs:
        type: string
      generator:
        type: string
      image:
        type: string
      language:
        type: string
        description: ISO_639-1 language code
      lastBuildDate:
        type: string
      link:
        type: string
        description: url of blog corresponding to feed
      managingEditor:
        type: string
      pubDate:
        type: string
      rating:
        type: string
      title:
        type: string
      webMaster:
        type: string
  Article:
    type: object
    required:
      - id
      - description
      - link
      - title
    properties:
      id:
        type: integer
      author:
        type: string
      category:
        type: string
      comments:
        type: string
      description:
        type: string
      enclosure:
        type: object
        properties:
          length: 
            type: number
          type:
            type: string
          url:
            type: string
      guid:
        type: string
      link:
        type: string
      pubdate:
        type: string
        format: date-time
      source:
        type: string
      title:
        type: string
